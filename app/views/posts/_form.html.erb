
<div class="wrapper">

<ul class="tabs clearfix" data-tabgroup="first-tab-group">
  <li><a href="#tab1" class="active">Blog</a></li>
  <li><a href="#tab2">Images</a></li>
  <li><a href="#tab3">Videos</a></li>
  <li><a href="#tab4">Tab 4</a></li>
  <li><a href="#tab5">Tab 5</a></li>
</ul>
<section id="first-tab-group" class="tabgroup">
  <div id="tab1">
    <h2>Blog</h2>
    <%= form_for([@blog, @post]) do |f| %>
  <% if @post.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@post.errors.count, "error") %> prohibited this post from being saved:</h2>

      <ul>
      <% @post.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :title %><br />
    <%= f.text_field :title %>
  </div>
  <div class="field">
    <%= f.label :location %><br />
    <%= f.text_field :location %>
  </div>
  <div class="field">
    <%= f.label :date %><br />
    <%= f.text_field :date %>
  </div>
  <div class="field">
    <%= f.label :stayed %><br />
    <%= f.text_field :stayed %>
  </div>
  <div class="field">
    <%= f.label :tags %><br />
    <%= f.text_field :tags %>
  </div>
  <div class="field">
    <%= f.label :body %><br />
    <%= f.text_area :body %>
  </div>


  </div>
  <div id="tab2">
    <h2>Pictures</h2>
     <div class="field">
        <%= f.label :photo_uploader %><br />
        <%= f.file_field :photo_uploader, :multiple => true %>
     </div>

<h1>jQuery Uploads</h1>

    <form id="form1" runat="server">
        <input type="file" id="imgInp"/>
        <img id="target_imgInp" src="#" alt="your image" class="thumb" height="200px"/>
        <input type="file" id="large1" />
        <img id="target_large1" src="#" alt="your image 1" />
        <input type="file" id="large2" />
        <img id="target_large2" src="#" alt="your image 2" />
    </form>
<script>
 function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();            
            reader.onload = function (e) {

               $("#target_"+$(input).attr("id")).attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("input[type=file]").change(function(){
        readURL(this);
    });
</script>
  </div>

  <div id="tab3">
    <h2>Videos</h2>
    <p><%= link_to 'Add video now via YouTube Link', new_video_path, class: 'btn btn-primary btn-lg' %> <br /> </p>

<div>
  <%= f.fields_for :video do |video_form| %>
    <div class="form-group">
      <%= video_form.label :link %>
      <%= video_form.text_field :link, class: 'form-control', required: true %>
      <span class="help-block">A link to the video on YouTube.</span>
    </div>

  <% end %>

</div>

 <div id="widget"></div>
 <div id="player"></div>

<script>
      // 2. Asynchronously load the Upload Widget and Player API code.
      var tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. Define global variables for the widget and the player.
      // The function loads the widget after the JavaScript code has
      // downloaded and defines event handlers for callback notifications
      // related to the widget.
      var widget;
      var player;
      function onYouTubeIframeAPIReady() {
        widget = new YT.UploadWidget('widget', {
          width: 500,
          events: {
            'onUploadSuccess': onUploadSuccess,
            'onProcessingComplete': onProcessingComplete
          }
        });
      }

      // 4. This function is called when a video has been successfully uploaded.
      function onUploadSuccess(event) {
        $('#post_video_attributes_link').val(event.data.videoId);
      }

      // 5. This function is called when a video has been successfully processed.
      function onProcessingComplete(event) {
        player = new YT.Player('player', {
          height: 390,
          width: 640,
          videoId: event.data.videoId,
          events: {}
        });
      }
    </script>
  </div>
  <div id="tab4">
    <h2>Heading 4</h2>
    <p>Quidem perferendis id sapiente cumque ullam repellendus dolorum odit rerum quibusdam tempora voluptatibus ipsum. Maiores laborum velit aperiam dicta quisquam assumenda at esse exercitationem culpa sequi porro minus ipsa aut.</p>
  </div>
  <div id="tab5">
    <h2>Heading 5</h2>
    <p>Iste eligendi ratione libero impedit quos necessitatibus labore corporis deserunt quo porro hic eius delectus ea ad amet dolore officiis debitis! Libero officia magnam consequuntur dignissimos molestias quia modi repellat.</p>
  </div>
</section>
</div>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>

<script>

  $('.tabgroup > div').hide();
$('.tabgroup > div:first-of-type').show();
$('.tabs a').click(function(e){
  e.preventDefault();
    var $this = $(this),
        tabgroup = '#'+$this.parents('.tabs').data('tabgroup'),
        others = $this.closest('li').siblings().children('a'),
        target = $this.attr('href');
    others.removeClass('active');
    $this.addClass('active');
    $(tabgroup).children('div').hide();
    $(target).show();
  
})
    

</script>
